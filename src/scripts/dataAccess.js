// create a function that will POST a reservation object to your
// API to be saved in permanent storage.
// Then create the event listener that collects the user input,
// constructs a state object for the reservation, and then pass it
// to your function that you defined above as an argument. Verify that it works by looking
// in your database.json file as see if a new object is in your reservations
// resource collection. 


// start by declaring an immutable variable and setting it equal to an
// object containing a requests key that has an empty array as a value

const reservationState = {
    requests: []
}

// Store a way to link to the container id in the <main> in HTML
const mainContainer = document.querySelector("#container")

// export a function that will capture the reservation state.
export const getReservations = () => {
    return reservationState.reservations.map(reservation => ({ ...reservation }))
}

// store a string containing the API URL in an immutable variable
const API = "http://localhost:8088"

// export a function that returns a ¿fetch call? with a template literal
// containing and expression of the variable containing a string with
// the API url and /reservations
export const fetchReservations = () => {
    return fetch(`${API}/reservations`)
        // Invoke the .then() method with a response parameter that will yield
        // a json.response. IMPLICIT RETURN. This converts from a string into
        // JavaScript
        .then(response => response.json())
        //THEN invoke the .then() method with a parameter that will be
        //passed an argument containing the value of a party request
        // generated by the user.
        .then(
            (partyReservations) => {
                // Store the external state in reservationState
                reservationState.reservations = partyReservations
            }
        )
}

// create a function that will POST a reservation object to your
// API to be saved in permanent storage.

// export a function that takes a user generated party request obj as a 
// parameter. The function will ¿execute a POST to the JSON database via
// API?
export const sendReservations = (userPartyRequest) => {
    const fetchOptions = {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(userPartyRequest)
    }


    return fetch(`${API}/reservations`, fetchOptions)
        .then(response => response.json())
        .then(() => {
            mainContainer.dispatchEvent(new CustomEvent("stateChanged"))
        })
}

export const deleteReservation = (id) => {
    return fetch(`${API}/reservations/${id}`, { method: "DELETE" })
        .then(
            () => {
                mainContainer.dispatchEvent(new CustomEvent("stateChanged"))
            }
        )
}